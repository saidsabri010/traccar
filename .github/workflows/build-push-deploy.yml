name: Build and push and deploy docker images

env:
  AZURE_CONTAINER_REGISTRY: traccarContainerRegistry.azurecr.io

on:
  push:
    branches:
      - Dev
      - v[0-9]+.[0-9]+
defaults:
  run:
    shell: bash
jobs:
  docker-build-push:
    name: Build and push docker images
    needs: build-installer
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set environment variables
        run: |
          echo "AZURE_STORAGE_CONNECTION_STRING=${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}" >> $GITHUB_ENV
      - name: Set environment ACR_IMAGE_TAGS
        if: github.ref != 'refs/heads/master'
        run: |
          _BRANCH=${GITHUB_REF##*/}
          _VERSION=${_BRANCH#v*}
          _MAJOR_VERSION=${_VERSION%.*}
          _ACR_IMAGE_TAGS="$AZURE_CONTAINER_REGISTRY:$_VERSION-${{ matrix.os }}"
          _ACR_IMAGE_TAGS+=",$AZURE_CONTAINER_REGISTRY:$_MAJOR_VERSION-${{ matrix.os }}"
          _ACR_IMAGE_TAGS+=",$AZURE_CONTAINER_REGISTRY:${{ matrix.os }}"
          if [ "${{ matrix.os }}" == "alpine" ]; then
            _ACR_IMAGE_TAGS+=",$AZURE_CONTAINER_REGISTRY:$_VERSION"
            _ACR_IMAGE_TAGS+=",$AZURE_CONTAINER_REGISTRY:$_MAJOR_VERSION"
          fi
          _ACR_IMAGE_TAGS=$(echo $_ACR_IMAGE_TAGS | tr '[:upper:]' '[:lower:]') # Lowercase the tags
          echo "ACR_IMAGE_TAGS=$_ACR_IMAGE_TAGS" >> $GITHUB_ENV
      - name: Set environment ACR_IMAGE_PLATFORMS
        run: |
          _ACR_IMAGE_PLATFORMS="linux/amd64"
          if [ "${{ matrix.os }}" == "debian" ]; then
            _ACR_IMAGE_PLATFORMS+=",linux/arm64"
          elif [ "${{ matrix.os }}" == "ubuntu" ]; then
            _ACR_IMAGE_PLATFORMS+=",linux/arm/v7,linux/arm64"
          fi
          echo "ACR_IMAGE_PLATFORMS=$_ACR_IMAGE_PLATFORMS" >> $GITHUB_ENV

      - name: Build and push
        run: build-docker-image
          
  build-docker-image:
     runs-on: ubuntu-latest
     steps:

       - uses: docker/build-push-action@v2
       - uses: azure/docker-login@v1
         with:
           login-server: ${{ env.AZURE_CONTAINER_REGISTRY }}
           username: ${{ secrets.ACR_USERNAME }}
           password: ${{ secrets.ACR_PASSWORD }
           file: Dockerfile.${{ matrix.os }}
           tags: ${{ env.ACR_IMAGE_TAGS }}
           platforms: linux
           push: true
           
           
  build-installer:

    runs-on: ubuntu-latest
     
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true
      - run: git checkout ${{ github.ref_name }}
        working-directory: ./traccar-web
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          cache: gradle
      - run: ./gradlew build
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: |
            traccar-web/package-lock.json
            traccar-web/modern/package-lock.json
      - run: |
          wget -q https://trials.sencha.com/cmd/7.6.0/SenchaCmd-7.6.0.87-linux-amd64.sh.zip
          unzip SenchaCmd-*.zip
          ./SenchaCmd-*.sh -q
          echo "$HOME/bin/Sencha/Cmd/" >> $GITHUB_PATH
      - run: ./traccar-web/tools/package.sh
      - run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt-get install libgcc-s1:i386 libstdc++6:i386
          sudo apt-get install innoextract makeself wine32 s3cmd
      - name: Build installers
        working-directory: ./setup
        run: |
          wget -q http://files.jrsoftware.org/is/5/isetup-5.5.6.exe
          wget -q https://github.com/adoptium/temurin17-binaries/releases/download/jdk-17.0.6+10/OpenJDK17U-jdk_x64_windows_hotspot_17.0.6_10.zip
          wget -q https://github.com/adoptium/temurin17-binaries/releases/download/jdk-17.0.6+10/OpenJDK17U-jdk_x64_linux_hotspot_17.0.6_10.tar.gz
          wget -q https://github.com/adoptium/temurin17-binaries/releases/download/jdk-17.0.6+10/OpenJDK17U-jdk_arm_linux_hotspot_17.0.6_10.tar.gz
          wget -q https://github.com/adoptium/temurin17-binaries/releases/download/jdk-17.0.6+10/OpenJDK17U-jdk_aarch64_linux_hotspot_17.0.6_10.tar.gz
          ./package.sh ${{ github.event.inputs.version }} linux-64
      - name: Upload installers to Azure Blob Storage
        working-directory: ./setup
        env:
          AZURE_STORAGE_CONNECTION_STRING: ${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}
        run: |
         az storage blob upload-batch --destination traccar --account-name traccarinstallers --account-key g3rh02VDjZMMzqKAVRygFZbkEeS3Cw9WZ0VZeXDjGOEYwq1T46GoVgV1YXotHtpzBtOUs0Xw3o+O+ASt3lkRjg== --source . --pattern "traccar-*.zip"

